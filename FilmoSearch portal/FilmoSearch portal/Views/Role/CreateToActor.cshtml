@model FilmoSearch_portal.ViewModels.RoleViewModels.CreateRoleViewModelToActor

@{
    ViewData["Title"] = "CreateToActor";
}

<h1>Actor</h1>

<h4>Add Role</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ActorId" class="control-label"></label>
                <div class="input-group flex-nowrap">
                    <input asp-for="ActorId" value="@Model.ActorId" class="input-group-text" id="addon-wrapping" readonly />
                    <input asp-for="ActorName" class="form-control" readonly />
                </div>
                <span asp-validation-for="FilmId" class="text-danger"></span>
            </div><br />
            <div class="form-group">
                <label asp-for="FilmId" class="control-label"></label>
                <select asp-for="FilmId" class="form-select" aria-label="Default select example">
                    @foreach (var item in Model.Films)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                </select>
                <span asp-validation-for="FilmId" class="text-danger"></span>
            </div><br />
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div><br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ShowFilms">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
